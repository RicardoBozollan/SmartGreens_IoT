[
    {
        "id": "f9c17568.a3d348",
        "type": "tab",
        "label": "Value Comparison Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fbdf11cf.2f61f",
        "type": "ui_numeric",
        "z": "f9c17568.a3d348",
        "name": "Maximium Light Level",
        "label": "Minimum Light Level (%)",
        "tooltip": "",
        "group": "b078eeb6.a7e938",
        "order": 1,
        "width": "4",
        "height": "1",
        "wrap": true,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "e2b4eac4.c07ff"
            ]
        ]
    },
    {
        "id": "e2b4eac4.c07ff",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Save Value",
        "func": "flow.set('savedLight', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "ed09cc8f.873d38",
        "type": "mqtt in",
        "z": "f9c17568.a3d348",
        "name": "",
        "topic": "light_level",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1b270ad8d5ea72a",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 80,
        "y": 340,
        "wires": [
            [
                "fc3fe8b493b8f6ad",
                "30a9d6519b276eca"
            ]
        ]
    },
    {
        "id": "3c0c2726.7a3b42",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Compare Values",
        "func": "var savedValue = flow.get('savedLight') || 0;\nvar mqttValue = msg.payload;\nvar override = flow.get('bulbOvr') || 0;\nvar bulbstate = flow.get('bulbOnOff') || 0;\n\n\nif (override == true) {\n    if (bulbstate == true){\n        msg.payload = true;\n    } else {\n       msg.payload = false; \n    }\n} else if (savedValue > mqttValue) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 340,
        "wires": [
            [
                "10f68907316282c9",
                "13bdf91018ccdd55",
                "c875384115c74023"
            ]
        ]
    },
    {
        "id": "fc3fe8b493b8f6ad",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "10f68907316282c9",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 280,
        "wires": []
    },
    {
        "id": "f184dc545813ec20",
        "type": "ui_gauge",
        "z": "f9c17568.a3d348",
        "name": "",
        "group": "59ff4452879cd942",
        "order": 10,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Light Level",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "4e7f819def45ea91",
        "type": "ui_numeric",
        "z": "f9c17568.a3d348",
        "name": "Minimum Moisture Level",
        "label": "Minimum Moisture Level (%)",
        "tooltip": "",
        "group": "b078eeb6.a7e938",
        "order": 2,
        "width": "4",
        "height": "1",
        "wrap": true,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "1",
        "className": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "d7343ceee64d7201"
            ]
        ]
    },
    {
        "id": "d7343ceee64d7201",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Save Value",
        "func": "flow.set('savedMoisture', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c22da9811174be89",
        "type": "mqtt in",
        "z": "f9c17568.a3d348",
        "name": "",
        "topic": "soil_moisture",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "e1b270ad8d5ea72a",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 900,
        "wires": [
            [
                "bb00dab09c7e2c86",
                "fa4a9d1930a635c0"
            ]
        ]
    },
    {
        "id": "79ce55cef3c3bd73",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Compare Values",
        "func": "var savedValue = flow.get('savedMoisture') || 0;\nvar mqttValue = msg.payload;\nvar override = flow.get('pumpOvr') || 0;\nvar pumpstate = flow.get('pumpOnOff') || 0;\n\n\nif (override == true) {\n    if (pumpstate == true){\n        msg.payload = true;\n    } else {\n       msg.payload = false; \n    }\n} else if (savedValue > mqttValue) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 900,
        "wires": [
            [
                "e73a9c96f6e7ad9c",
                "937dd7ede9dc6a34",
                "53f744a3a4842933"
            ]
        ]
    },
    {
        "id": "e73a9c96f6e7ad9c",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 800,
        "wires": []
    },
    {
        "id": "9743cc3dae689805",
        "type": "ui_gauge",
        "z": "f9c17568.a3d348",
        "name": "",
        "group": "59ff4452879cd942",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Soil Moisture Level",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 770,
        "y": 820,
        "wires": []
    },
    {
        "id": "617de7431a833229",
        "type": "ui_text",
        "z": "f9c17568.a3d348",
        "group": "b078eeb6.a7e938",
        "order": 11,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Water Pump",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1150,
        "y": 900,
        "wires": []
    },
    {
        "id": "8b1be8de5f6aa974",
        "type": "ui_text",
        "z": "f9c17568.a3d348",
        "group": "b078eeb6.a7e938",
        "order": 12,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Light Bulb",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 880,
        "y": 340,
        "wires": []
    },
    {
        "id": "bb00dab09c7e2c86",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 1020,
        "wires": []
    },
    {
        "id": "be17691d5fd569e3",
        "type": "smooth",
        "z": "f9c17568.a3d348",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "4",
        "round": "1",
        "mult": "single",
        "reduce": false,
        "x": 540,
        "y": 900,
        "wires": [
            [
                "79ce55cef3c3bd73",
                "9743cc3dae689805",
                "5575ad9cc943e039"
            ]
        ]
    },
    {
        "id": "b44aa063cb011ba5",
        "type": "mysql",
        "z": "f9c17568.a3d348",
        "mydb": "256f9741f8689e4d",
        "name": "",
        "x": 1240,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5bc8361824749bda",
        "type": "json",
        "z": "f9c17568.a3d348",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "ce8a2013fd7b90e1"
            ]
        ]
    },
    {
        "id": "ce8a2013fd7b90e1",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Construct SQL",
        "func": "// Assuming the JSON data has fields: temperature and humidity\nlet light_level = msg.payload;\nlet timestamp = new Date().toISOString().slice(0, 19).replace('T', ' '); // Format as MySQL datetime\n\nmsg.topic = \"INSERT INTO sensor_data (light_level, timestamp) VALUES (?, ?)\";\nmsg.payload = [light_level, timestamp];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 200,
        "wires": [
            [
                "b44aa063cb011ba5",
                "0fe1211ab4a0daf6"
            ]
        ]
    },
    {
        "id": "0fe1211ab4a0daf6",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "5575ad9cc943e039",
        "type": "json",
        "z": "f9c17568.a3d348",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 730,
        "y": 720,
        "wires": [
            [
                "c1ee7f09d0ca65f1"
            ]
        ]
    },
    {
        "id": "c1ee7f09d0ca65f1",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Construct SQL 2",
        "func": "// Assuming the JSON data has fields: temperature and humidity\nlet humidity = msg.payload;\nlet timestamp = new Date().toISOString().slice(0, 19).replace('T', ' '); // Format as MySQL datetime\n\nmsg.topic = \"INSERT INTO sensor_data (humidity, timestamp) VALUES (?, ?)\";\nmsg.payload = [humidity, timestamp];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 700,
        "wires": [
            [
                "b44aa063cb011ba5",
                "f458ca26564cbdd3"
            ]
        ]
    },
    {
        "id": "f458ca26564cbdd3",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 520,
        "wires": []
    },
    {
        "id": "30a9d6519b276eca",
        "type": "range",
        "z": "f9c17568.a3d348",
        "minin": "0",
        "maxin": "4095",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 280,
        "y": 340,
        "wires": [
            [
                "5bc8361824749bda",
                "f184dc545813ec20",
                "3c0c2726.7a3b42"
            ]
        ]
    },
    {
        "id": "fa4a9d1930a635c0",
        "type": "range",
        "z": "f9c17568.a3d348",
        "minin": "0",
        "maxin": "4095",
        "minout": "0",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "",
        "x": 360,
        "y": 900,
        "wires": [
            [
                "be17691d5fd569e3"
            ]
        ]
    },
    {
        "id": "a30e75b96cc4aeaa",
        "type": "ui_switch",
        "z": "f9c17568.a3d348",
        "name": "",
        "label": "Light Bulb Override",
        "tooltip": "",
        "group": "b078eeb6.a7e938",
        "order": 5,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 170,
        "y": 1120,
        "wires": [
            [
                "62110759d4b0cb30"
            ]
        ]
    },
    {
        "id": "ad55d8fb1ad5dafd",
        "type": "ui_switch",
        "z": "f9c17568.a3d348",
        "name": "",
        "label": "Light Bulb On/Off",
        "tooltip": "",
        "group": "b078eeb6.a7e938",
        "order": 6,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 170,
        "y": 1180,
        "wires": [
            [
                "ab613d5d838653b4"
            ]
        ]
    },
    {
        "id": "62110759d4b0cb30",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Save Value",
        "func": "flow.set('bulbOvr', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "ab613d5d838653b4",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Save Value",
        "func": "flow.set('bulbOnOff', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "86779ffbc03716ac",
        "type": "ui_switch",
        "z": "f9c17568.a3d348",
        "name": "",
        "label": "Pump Override",
        "tooltip": "",
        "group": "b078eeb6.a7e938",
        "order": 7,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 1120,
        "wires": [
            [
                "99d5e19b1e27490b"
            ]
        ]
    },
    {
        "id": "f1b9226f78fbd491",
        "type": "ui_switch",
        "z": "f9c17568.a3d348",
        "name": "",
        "label": "Pump On/Off",
        "tooltip": "",
        "group": "b078eeb6.a7e938",
        "order": 8,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 1180,
        "wires": [
            [
                "b72729ba66cf94bb"
            ]
        ]
    },
    {
        "id": "99d5e19b1e27490b",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Save Value",
        "func": "flow.set('pumpOvr', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "b72729ba66cf94bb",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Save Value",
        "func": "flow.set('pumpOnOff', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "13bdf91018ccdd55",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Binary Transform",
        "func": "if (msg.payload == true){\n    flow.set('bulb', '1');\n} else {\n    flow.set('bulb', '0');\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 440,
        "wires": [
            [
                "1b56f618b570afdb"
            ]
        ]
    },
    {
        "id": "937dd7ede9dc6a34",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Binary Transform",
        "func": "if (msg.payload == true){\n    flow.set('pump', '1');\n} else {\n    flow.set('pump', '0');\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "1b56f618b570afdb",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "Binary Join",
        "func": "var pumpstate = flow.get('pump') || 0;\nvar bulbstate = flow.get('bulb') || 0;\n\n\n// Join the strings together\nlet joinedString = pumpstate + bulbstate;\n\n// Set the joined string as the new message payload\nmsg.payload = joinedString;\n\n// Return the modified message\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 620,
        "wires": [
            [
                "7de1d525761c78c0",
                "1401aff5bdf06332"
            ]
        ]
    },
    {
        "id": "7de1d525761c78c0",
        "type": "mqtt out",
        "z": "f9c17568.a3d348",
        "name": "",
        "topic": "actuators_state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "e1b270ad8d5ea72a",
        "x": 740,
        "y": 620,
        "wires": []
    },
    {
        "id": "1401aff5bdf06332",
        "type": "debug",
        "z": "f9c17568.a3d348",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 520,
        "wires": []
    },
    {
        "id": "c875384115c74023",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "function 1",
        "func": "// Retrieve the boolean value from the message payload\nlet booleanValue = msg.payload;\n\n// Transform the boolean value into \"On\" or \"Off\"\nmsg.payload = booleanValue ? \"On\" : \"Off\";\n\n// Return the modified message\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 340,
        "wires": [
            [
                "8b1be8de5f6aa974"
            ]
        ]
    },
    {
        "id": "53f744a3a4842933",
        "type": "function",
        "z": "f9c17568.a3d348",
        "name": "function 2",
        "func": "// Retrieve the boolean value from the message payload\nlet booleanValue = msg.payload;\n\n// Transform the boolean value into \"On\" or \"Off\"\nmsg.payload = booleanValue ? \"On\" : \"Off\";\n\n// Return the modified message\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 900,
        "wires": [
            [
                "617de7431a833229"
            ]
        ]
    },
    {
        "id": "5241c4013980d566",
        "type": "ui_spacer",
        "z": "f9c17568.a3d348",
        "name": "spacer",
        "group": "b078eeb6.a7e938",
        "order": 4,
        "width": "10",
        "height": "1"
    },
    {
        "id": "1e62f53e97f8ea96",
        "type": "ui_spacer",
        "z": "f9c17568.a3d348",
        "name": "spacer",
        "group": "b078eeb6.a7e938",
        "order": 10,
        "width": "10",
        "height": "1"
    },
    {
        "id": "5c1196a53f5be484",
        "type": "ui_spacer",
        "z": "f9c17568.a3d348",
        "name": "spacer",
        "group": "b078eeb6.a7e938",
        "order": 3,
        "width": "2",
        "height": "1"
    },
    {
        "id": "1a8864c83612a670",
        "type": "ui_spacer",
        "z": "f9c17568.a3d348",
        "name": "spacer",
        "group": "b078eeb6.a7e938",
        "order": 9,
        "width": "2",
        "height": "1"
    },
    {
        "id": "b078eeb6.a7e938",
        "type": "ui_group",
        "name": "Control Panel",
        "tab": "56c2b56e.6d42b8",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e1b270ad8d5ea72a",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.15.160",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "59ff4452879cd942",
        "type": "ui_group",
        "name": "Live Data",
        "tab": "56c2b56e.6d42b8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "256f9741f8689e4d",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "iot_data",
        "tz": "-3",
        "charset": "UTF8"
    },
    {
        "id": "56c2b56e.6d42b8",
        "type": "ui_tab",
        "name": "Smart Greens",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]